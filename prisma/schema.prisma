// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init
// npx prisma migrate dev --create-only

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  USER
  SUBUSER
  MASTER
  ADMIN
}

model User {
  id              Int       @id @default(autoincrement())
  email           String    @unique
  username        String?   @unique
  password        String
  role            Role      @default(USER)
  isEmailVerified Boolean   @default(false)
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  deletedAt       DateTime?
  forgotToken     String?
  rate    Int @default(0)
  userTokens      userAuthTokens[]
}

model userAuthTokens {
  id              Int       @id @default(autoincrement())
  user_id         Int
  user            User      @relation(fields: [user_id], references: [id])
  refreshToken    String?
  accessToken     String?
  ua              String?
  fingerprint     String?
  ip              String?
  expiresIn       BigInt
  createdAt       DateTime  @default(now())
}







model Movie {
  id              Int       @id @default(autoincrement())
  title           String    
  origin          String
  director        String
  year            Int
  country         String?

  cast            Cast[]
  library         Library[]
}

model Person {
  id              Int       @id @default(autoincrement())
  name            String   
  role            String

  cast            Cast[]
  library         Library[]
}

model Cast {
  id              Int       @id @default(autoincrement())
  person_id       Int   
  movie_id        Int

  person          Person     @relation(fields: [person_id], references: [id])
  movie           Movie      @relation(fields: [movie_id], references: [id])
}

model Library {
  id              Int       @id @default(autoincrement())
  word            String   
  type            String 
  translation     String?
  additionalData  String?
  person_id       Int?
  movie_id        Int?

  movie           Movie?       @relation(fields: [movie_id], references: [id])
  person          Person?      @relation(fields: [person_id], references: [id])
}


model Link {
  id              Int       @id @default(autoincrement())
  url             String   
}




